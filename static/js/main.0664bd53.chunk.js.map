{"version":3,"sources":["mockData.js","supabase.js","pages/Login.js","App.js","reportWebVitals.js","styles/colors.js","styles/theme.js","index.js"],"names":["Main","url","process","REACT_APP_SUPA_API_URL","REACT_APP_SUPA_API_KEY","supabase","createClient","Login","signInWithGithub","a","auth","signIn","provider","redirectTo","user","session","error","console","log","direction","bg","height","align","justify","width","color","fontFamily","fontWeight","fontSize","pb","colorScheme","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","colors","softPink","softBlue","softYellow","softBlack","neutral","paper","info","success","warning","theme","extendTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAsB,aACpBA,KAAM,CACJ,EAAG,CACDC,IAAK,kBAEP,EAAG,CACDA,IAAK,kBAEP,EAAG,CACDA,IAAK,kBAEP,EAAG,CACDA,IAAK,kBAEP,EAAG,CACDA,IAAK,kBAEP,EAAG,CACDA,IAAK,kBAEP,EAAG,CACDA,IAAK,oBAGR,QAAU,CACT,EAAG,CACDA,IAAK,oB,8CCxBX,EAA2DC,sfAAnDC,EAAR,EAAQA,uBAAwBC,EAAhC,EAAgCA,uBAGnBC,EAAWC,YACtBH,EACAC,GCHF,EAA2DF,sfAG9CK,GAHb,EAAQJ,uBAAR,EAAgCC,uBAGX,WACnB,IAAMI,EAAgB,uCAAG,kCAAAC,EAAA,sEACgBJ,EAASK,KAAKC,OACnD,CACEC,SAAU,UAEZ,CACEC,WAAY,yBANO,gBACfC,EADe,EACfA,KAAMC,EADS,EACTA,QAASC,EADA,EACAA,MASvBC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAZW,2CAAH,qDAetB,OACE,cAAC,IAAD,CAAMG,UAAU,SAASC,GAAG,UAAUC,OAAO,QAA7C,SACE,cAAC,IAAD,CACEC,MAAM,SACNC,QAAQ,SACRJ,UAAU,MACVK,MAAM,OACNH,OAAO,OALT,SAOE,eAAC,IAAD,CAAMF,UAAU,SAASG,MAAM,SAA/B,UACE,cAAC,IAAD,CACEG,MAAM,QACNC,WAAW,OACXC,WAAY,IACZC,SAAS,MACTC,GAAI,EALN,mBASA,cAAC,IAAD,CAAQC,YAAY,OAAOC,QAASvB,EAApC,wCCrBKwB,EALH,WACV,OAAO,cAAC,EAAD,KCLMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCiBCQ,EAxBO,CACpBC,SAAU,YACV,gBAAiB,UACjB,kBAAmB,UACnBC,SAAU,UACV,kBAAmB,UACnB,oBAAqB,UACrBC,WAAY,UACZ,eAAgB,UAChBC,UAAW,UACXC,QAAS,UACT,gBAAiB,UACjBC,MAAO,UAEP,WAAY,UACZ,WAAY,UACZ,WAAY,UACZ,eAAgB,UAChBC,KAAM,UACNC,QAAS,UACTC,QAAS,UACTnC,MAAO,WCbMoC,EAJMC,YAAY,CAC/BX,W,MCIFY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAgBJ,MAAOA,EAAvB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.0664bd53.chunk.js","sourcesContent":["export const MOCK_DATA = {\n  Main: {\n    1: {\n      url: 'www.google.com',\n    },\n    2: {\n      url: 'www.google.com',\n    },\n    3: {\n      url: 'www.google.com',\n    },\n    4: {\n      url: 'www.google.com',\n    },\n    5: {\n      url: 'www.google.com',\n    },\n    6: {\n      url: 'www.google.com',\n    },\n    7: {\n      url: 'www.google.com',\n    },\n  },\n  ['Misc.']: {\n    1: {\n      url: 'www.google.com',\n    },\n  },\n};\n\nexport default MOCK_DATA;\n","import { createClient } from '@supabase/supabase-js';\n\nconst { REACT_APP_SUPA_API_URL, REACT_APP_SUPA_API_KEY } = process.env;\n\n// Create a single supabase client for interacting with your database\nexport const supabase = createClient(\n  REACT_APP_SUPA_API_URL,\n  REACT_APP_SUPA_API_KEY,\n);\n\nexport default supabase;\n","import { Button, Flex, Text } from '@chakra-ui/react';\n\nimport { supabase } from 'supabase';\n\nconst { REACT_APP_SUPA_API_URL, REACT_APP_SUPA_API_KEY } = process.env;\n// const OAUTH_REDIRECT_URI = `${REACT_APP_SUPA_API_URL}/auth/v1/callback`;\n\nexport const Login = () => {\n  const signInWithGithub = async () => {\n    const { user, session, error } = await supabase.auth.signIn(\n      {\n        provider: 'github',\n      },\n      {\n        redirectTo: '/atlas/test-redirect',\n      },\n    );\n\n    console.log(user);\n    console.log(session);\n    console.log(error);\n  };\n\n  return (\n    <Flex direction='column' bg='#E0C9A5' height='100vh'>\n      <Flex\n        align='center'\n        justify='center'\n        direction='row'\n        width='100%'\n        height='100%'\n      >\n        <Flex direction='column' align='center'>\n          <Text\n            color='black'\n            fontFamily='Lora'\n            fontWeight={700}\n            fontSize='6xl'\n            pb={3}\n          >\n            Atlas\n          </Text>\n          <Button colorScheme='teal' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n","import { Dashboard, Login } from 'pages';\n\n// note to self:\n// npm run deploy\n\n// TODO: THEME... STEAL FROM DAISYUI AND PLUG INTO CHAKRA\n// TODO: AUTHENTICATION\n// TODO: ROUTE TO LOGGED_OUT V LOGGED_IN\n// TODO: 1-LAYOUT\n// TODO: SIDEBAR OF CATEGORIES\n// TODO: SEARCH BAR\n// TODO: NOTES CANVAS\n// TODO: CRUD ACTIONS W/ BE SUPPORT\n// TODO: REACT-QUERY ONCE BE BUILT\n// const CYBER_YELLOW = '#FFEE00';\n\nconst App = () => {\n  return <Login />;\n  // return <Dashboard />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const colors = {\n  softPink: '#f15152ff',\n  'primary-focus': '#e86f68',\n  'primary-content': '#282425',\n  softBlue: '#a4cbb4',\n  'secondary-focus': '#84b89a',\n  'secondary-content': '#282425',\n  softYellow: '#ebdc99',\n  'accent-focus': '#e2cd6e',\n  softBlack: '#282425',\n  neutral: '#7d7259',\n  'neutral-focus': '#454035',\n  paper: '#fbfbf8',\n  // paper: '#e4d8b4',\n  'base-100': '#e4d8b4',\n  'base-200': '#d2c59d',\n  'base-300': '#c6b386',\n  'base-content': '#282425',\n  info: '#2094f3',\n  success: '#009485',\n  warning: '#ff9900',\n  error: '#ff5724',\n};\n\nexport default colors;\n\n/**\n *\n  --light-cyan: #e0fbfcff;\n  --blue-munsell: #0091adff;\n  --mustard: #fcdc4dff;\n  --red-salsa: #f15152ff;\n  --raisin-black: #24272bff;\n\n\n  --light-cyan: hsla(182, 82%, 93%, 1);\n  --blue-munsell: hsla(190, 100%, 34%, 1);\n  --mustard: hsla(49, 97%, 65%, 1);\n  --red-salsa: hsla(360, 85%, 63%, 1);\n  --raisin-black: hsla(214, 9%, 15%, 1);\n\n\n  $light-cyan: #e0fbfcff;\n  $blue-munsell: #0091adff;\n  $mustard: #fcdc4dff;\n  $red-salsa: #f15152ff;\n  $raisin-black: #24272bff;\n\n\n  $light-cyan: hsla(182, 82%, 93%, 1);\n  $blue-munsell: hsla(190, 100%, 34%, 1);\n  $mustard: hsla(49, 97%, 65%, 1);\n  $red-salsa: hsla(360, 85%, 63%, 1);\n  $raisin-black: hsla(214, 9%, 15%, 1);\n\n\n  $light-cyan: rgba(224, 251, 252, 1);\n  $blue-munsell: rgba(0, 145, 173, 1);\n  $mustard: rgba(252, 220, 77, 1);\n  $red-salsa: rgba(241, 81, 82, 1);\n  $raisin-black: rgba(36, 39, 43, 1);\n\n\n  $gradient-top: linear-gradient(0deg, #e0fbfcff, #0091adff, #fcdc4dff, #f15152ff, #24272bff);\n  $gradient-right: linear-gradient(90deg, #e0fbfcff, #0091adff, #fcdc4dff, #f15152ff, #24272bff);\n  $gradient-bottom: linear-gradient(180deg, #e0fbfcff, #0091adff, #fcdc4dff, #f15152ff, #24272bff);\n  $gradient-left: linear-gradient(270deg, #e0fbfcff, #0091adff, #fcdc4dff, #f15152ff, #24272bff);\n  $gradient-top-right: linear-gradient(45deg, #e0fbfcff, #0091adff, #fcdc4dff, #f15152ff, #24272bff);\n  $gradient-bottom-right: linear-gradient(135deg, #e0fbfcff, #0091adff, #fcdc4dff, #f15152ff, #24272bff);\n  $gradient-top-left: linear-gradient(225deg, #e0fbfcff, #0091adff, #fcdc4dff, #f15152ff, #24272bff);\n  $gradient-bottom-left: linear-gradient(315deg, #e0fbfcff, #0091adff, #fcdc4dff, #f15152ff, #24272bff);\n  $gradient-radial: radial-gradient(#e0fbfcff, #0091adff, #fcdc4dff, #f15152ff, #24272bff);\n */\n","import { extendTheme } from '@chakra-ui/react';\n\nimport colors from './colors';\n\nexport const theme = extendTheme({\n  colors,\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './styles/theme';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}