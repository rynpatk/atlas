{"version":3,"sources":["constants.js","supabase.js","store/createCoreSlice.js","store/useStore.js","components/HighlightedText.js","utils/openLink.js","components/Links.js","components/TopicListItem.js","pages/Main.js","pages/Login.js","App.js","styles/colors.js","styles/theme.js","index.js"],"names":["REACT_APP_SUPABASE_URL","process","REACT_APP_SUPABASE_KEY","supabase","createClient","createCoreSlice","set","activeTool","setActiveTool","tool","prev","useStore","create","get","HighlightedText","str","substr","trim","mx","my","fontSize","startIndex","toLowerCase","indexOf","endIndex","length","startText","slice","highlightedText","endText","as","fontWeight","color","openLink","link","url","window","open","LinkListItem","inputTerm","onClick","activeLinkId","editLinkName","deleteLink","useState","name","newLinkName","setNewLinkName","useDrag","type","item","collect","monitor","isDragging","dragRef","linkId","id","createdAt","created_at","linkIsActive","formattedDate","format","Date","_hover","cursor","bg","direction","align","width","minHeight","boxShadow","mb","py","px","borderRadius","ref","style","value","placeholder","onChange","e","target","onBlur","justify","flex","spacing","colorScheme","variant","rightIcon","size","stopPropagation","Links","links","setActiveLinkId","state","pl","mr","pb","map","TopicListItem","topic","activeTopicId","setActiveTopicId","topicLinksCount","addLinkToTopic","useDrop","accept","drop","topicId","isOver","dropRef","alignSelf","UNCATEGORIZED","Main","user","setInputTerm","isCreatingLink","setIsCreatingLink","setLinks","topics","setTopics","activeTopic","find","newTopicName","setNewTopicName","filteredLinks","useMemo","filter","group_id","topicLinkCountsMap","reduce","acc","linksForTopic","uncategorizedLinksCount","useEffect","fetchTopics","a","from","select","order","ascending","data","error","console","log","fetchLinks","delete","eq","addLink","insert","user_id","single","newLink","createTopic","newTopic","editTopicName","update","updatedTopic","updatedTopics","updatedLink","updatedLinks","height","overflowY","p","pt","position","bottom","alignItems","borderWidth","disabled","ml","textDecoration","overflowX","readonly","i","openAllLinksInActiveTopic","category","Login","auth","signIn","provider","redirectTo","App","setUser","isAuthenticated","Boolean","session","onAuthStateChange","_","currentUser","authListener","unsubscribe","DndProvider","backend","HTML5Backend","basename","exact","path","element","status","colors","Terracotta","HalfBaked","Tacao","OrientalPink","Keppel","softBlack","softPink","softBlue","softYellow","neutral","paper","base","info","success","warning","canvas","light","theme","extendTheme","fonts","heading","body","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c1b28fe.chunk.js","sourcesContent":["export const REACT_APP_SUPABASE_URL = process.env.REACT_APP_SUPABASE_URL;\nexport const REACT_APP_SUPABASE_KEY = process.env.REACT_APP_SUPABASE_KEY;\n\nexport default {\n  REACT_APP_SUPABASE_KEY,\n  REACT_APP_SUPABASE_URL,\n};\n","import { createClient } from '@supabase/supabase-js';\n\nimport { REACT_APP_SUPABASE_URL, REACT_APP_SUPABASE_KEY } from './constants';\n\n// Create a single supabase client for interacting with your database\nexport const supabase = createClient(\n  REACT_APP_SUPABASE_URL,\n  REACT_APP_SUPABASE_KEY,\n);\n\nexport default supabase;\n","const createCoreSlice = (set) => ({\n  activeTool: 'open',\n  setActiveTool: (tool) => {\n    set((prev) => ({ activeTool: prev.activeTool === tool ? null : tool }));\n  },\n});\n\nexport default createCoreSlice;\n","import create from 'zustand';\n\nimport createCoreSlice from './createCoreSlice';\n\nconst useStore = create((set, get) => ({\n  ...createCoreSlice(set, get),\n}));\n\nexport default useStore;\n","import React from 'react';\nimport { Text } from '@chakra-ui/react';\n\nexport const HighlightedText = ({ str, substr = '' }) => {\n  if (!substr || !substr.trim()) {\n    return (\n      <>\n        <Text mx={1} my={0.5} fontSize={['sm', 'sm', 'md']}>\n          {str}\n        </Text>\n      </>\n    );\n  }\n\n  const startIndex = str.toLowerCase().indexOf(substr.toLowerCase());\n\n  if (startIndex > -1) {\n    const endIndex = startIndex + substr.length;\n    const startText = str.slice(0, startIndex);\n    const highlightedText = str.slice(startIndex, endIndex);\n    const endText = str.slice(endIndex, str.length);\n\n    return (\n      <Text fontSize={['sm', 'sm', 'md']} mx={1} my={0.5}>\n        {startText}\n        <Text as='span' fontWeight={600} color='teal'>\n          {highlightedText}\n        </Text>\n        {endText}\n      </Text>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default HighlightedText;\n","/**\n * opening a new tab as a background tab is not currently possible.\n * note that this behavior would be ideal if at all possible.\n */\nexport default function openLink(link = {}) {\n  if (link.url.indexOf('http://') === 0 || link.url.indexOf('https://') === 0) {\n    window.open(link.url, '_blank');\n  } else {\n    window.open(`http://${link.url}`, '_blank');\n  }\n}\n","import React, { useState } from 'react';\nimport format from 'date-fns/format';\nimport { Box, Button, Flex, Stack, Text } from '@chakra-ui/react';\nimport { EditText } from 'react-edit-text';\nimport { useDrag } from 'react-dnd';\nimport { IoTrashOutline, IoArrowRedoOutline } from 'react-icons/io5';\n\nimport useStore from 'store/useStore';\nimport HighlightedText from 'components/HighlightedText';\nimport openLink from 'utils/openLink';\n\nimport 'react-edit-text/dist/index.css';\n\nexport const LinkListItem = ({\n  link,\n  inputTerm,\n  onClick,\n  activeLinkId,\n  openLink,\n  editLinkName,\n  deleteLink,\n}) => {\n  const [newLinkName, setNewLinkName] = useState(link?.name || '');\n  const [{ isDragging }, dragRef] = useDrag({\n    type: 'link',\n    item: link,\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const {\n    id: linkId,\n    url,\n    created_at: createdAt,\n    name,\n    // group_id: groupId,\n  } = link;\n  const linkIsActive = linkId === activeLinkId;\n  const formattedDate = format(new Date(createdAt), 'MMM d');\n\n  return (\n    <Flex\n      onClick={() => {\n        onClick(link);\n      }}\n      _hover={{\n        cursor: 'pointer',\n        bg: !linkIsActive ? 'gray.200' : null,\n      }}\n      direction='row'\n      align={linkIsActive ? 'flex-start' : 'center'}\n      width='100%'\n      bg={isDragging ? 'gray.200' : linkIsActive ? 'light' : null}\n      minHeight={linkIsActive ? '100px' : null}\n      boxShadow={linkIsActive ? 'base' : null}\n      mb={2}\n      py={2}\n      px={2}\n      borderRadius={10}\n      ref={dragRef}\n    >\n      {linkIsActive ? (\n        <EditText\n          py={1}\n          style={{ width: '200px' }}\n          value={newLinkName || ''}\n          placeholder='Enter name...'\n          onChange={(e) => {\n            setNewLinkName(e.target.value);\n          }}\n          onBlur={() => {\n            editLinkName({ linkId: link.id, newLinkName });\n          }}\n        />\n      ) : (\n        <Text py={1} width='200px' color={name ? 'black' : 'gray'}>\n          {name || 'Unnamed'}\n        </Text>\n      )}\n      <Text py={1} color='gray' width='200px'>\n        Added {formattedDate}\n      </Text>\n\n      <Box py={1} width='50%'>\n        <HighlightedText str={url} substr={inputTerm} />\n      </Box>\n\n      <Flex align='center' justify='flex-end' flex={1}>\n        <Stack direction='row' spacing={2} align='center'>\n          {linkIsActive ? (\n            <Button\n              width='100px'\n              borderRadius={8}\n              colorScheme='red'\n              color={linkIsActive ? 'white' : 'warning'}\n              fontSize='sm'\n              variant={linkIsActive ? 'solid' : 'ghost'}\n              rightIcon={<IoTrashOutline size='18px' />}\n              onClick={(e) => {\n                e.stopPropagation();\n                deleteLink(link.id);\n              }}\n            >\n              DELETE\n            </Button>\n          ) : null}\n          <Button\n            width='100px'\n            borderRadius={8}\n            colorScheme={linkIsActive ? 'teal' : null}\n            color={linkIsActive ? 'white' : 'gray.600'}\n            fontSize='sm'\n            variant={linkIsActive ? 'solid' : 'ghost'}\n            rightIcon={<IoArrowRedoOutline size='20px' />}\n            onClick={(e) => {\n              e.stopPropagation();\n              openLink(link);\n            }}\n          >\n            OPEN\n          </Button>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport const Links = ({\n  links,\n  inputTerm,\n  activeLinkId,\n  setActiveLinkId,\n  editLinkName,\n  deleteLink,\n}) => {\n  const activeTool = useStore((state) => state.activeTool);\n\n  if (!links) {\n    // TODO: loading spinner\n    return null;\n  }\n\n  const onClick = (link) => {\n    if (activeLinkId === link.id) {\n      // setActiveLinkId(null);\n    } else {\n      setActiveLinkId(link.id);\n    }\n  };\n\n  return (\n    <Flex direction='column' flex={1} pl={2} mr={5} pb={2}>\n      {links.map((link) => {\n        return (\n          <LinkListItem\n            key={link.id}\n            link={link}\n            inputTerm={inputTerm}\n            onClick={onClick}\n            openLink={openLink}\n            activeTool={activeTool}\n            activeLinkId={activeLinkId}\n            setActiveLinkId={setActiveLinkId}\n            editLinkName={editLinkName}\n            deleteLink={deleteLink}\n          />\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Links;\n","import React from 'react';\nimport { Box, Text } from '@chakra-ui/react';\nimport { useDrop } from 'react-dnd';\n\nexport const TopicListItem = ({\n  topic,\n  activeTopicId,\n  setActiveTopicId,\n  topicLinksCount,\n  addLinkToTopic,\n}) => {\n  const [{ isOver }, dropRef] = useDrop({\n    accept: 'link',\n    drop: (item) => {\n      addLinkToTopic({ linkId: item.id, topicId: topic.id });\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n  });\n\n  const { id: topicId, name } = topic;\n  return (\n    <Box\n      ref={dropRef}\n      key={topicId}\n      width='100%'\n      bg={isOver ? 'cyan.100' : activeTopicId === topicId ? 'gray.50' : null}\n      _hover={{\n        bg: 'gray.100',\n        cursor: 'pointer',\n      }}\n      onClick={() => {\n        setActiveTopicId(topicId);\n      }}\n    >\n      <Text\n        py={2}\n        px={6}\n        alignSelf='flex-start'\n        fontWeight={activeTopicId === topicId ? 'bold' : null}\n        onClick={() => {\n          setActiveTopicId(topicId);\n        }}\n      >\n        {name || 'Untitled'} ({topicLinksCount})\n      </Text>\n    </Box>\n  );\n};\n\nexport default TopicListItem;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { Box, Button, Input, InputGroup, Flex, Text } from '@chakra-ui/react';\nimport supabase from 'supabase';\nimport { EditText } from 'react-edit-text';\n\nimport Links from 'components/Links';\nimport TopicListItem from 'components/TopicListItem';\nimport openLink from 'utils/openLink';\n\nconst MAX_OPENABLE_LINKS = 10;\nconst UNCATEGORIZED = 'Uncategorized';\n\nexport const Main = ({ user }) => {\n  const [activeTopicId, setActiveTopicId] = useState(null);\n  const [activeLinkId, setActiveLinkId] = useState(null);\n  const [inputTerm, setInputTerm] = useState(null);\n  const [isCreatingLink, setIsCreatingLink] = useState(false);\n  const [links, setLinks] = useState(null);\n  const [topics, setTopics] = useState(null);\n\n  const activeTopic = topics?.find((topic) => topic.id === activeTopicId);\n  const [newTopicName, setNewTopicName] = useState(activeTopic?.name || '');\n\n  const filteredLinks = useMemo(() => {\n    return links?.filter((link) => {\n      if (activeTopicId) {\n        if (activeTopicId === UNCATEGORIZED) {\n          if (link?.group_id) {\n            return false;\n          }\n        } else {\n          if (link?.group_id !== activeTopicId) {\n            return false;\n          }\n        }\n      }\n\n      if (inputTerm) {\n        if (link?.url.toLowerCase().indexOf(inputTerm.toLowerCase()) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }, [inputTerm, activeTopicId, links]);\n\n  const topicLinkCountsMap = useMemo(() => {\n    return topics?.reduce((acc, topic) => {\n      const { id: topicId } = topic;\n      const linksForTopic = links?.filter((link) => {\n        return link.group_id === topicId;\n      });\n\n      return {\n        ...acc,\n        [topicId]: linksForTopic?.length || 0,\n      };\n    }, {});\n  }, [topics, links]);\n\n  const uncategorizedLinksCount = useMemo(() => {\n    return links?.filter((link) => !link.group_id)?.length || 0;\n  }, [links]);\n\n  useEffect(() => {\n    if (activeTopic?.name) {\n      setNewTopicName(activeTopic.name);\n    }\n  }, [activeTopic]);\n\n  // const signOut = () => {\n  //   supabase.auth.signOut();\n  // };\n\n  const fetchTopics = async () => {\n    const { data, error } = await supabase\n      .from('groups')\n      .select('*')\n      .order('id', { ascending: true });\n\n    if (error) {\n      console.log('error', error);\n    } else {\n      setTopics(data);\n    }\n  };\n\n  const fetchLinks = async () => {\n    const { data, error } = await supabase\n      .from('links')\n      .select('*')\n      .order('id', { ascending: false });\n\n    if (error) {\n      console.log('error', error);\n    } else {\n      setLinks(data);\n    }\n  };\n\n  const deleteLink = async (id) => {\n    try {\n      await supabase.from('links').delete().eq('id', id);\n      setLinks(links.filter((link) => link.id !== id));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  const addLink = async () => {\n    if (!inputTerm) return;\n\n    setIsCreatingLink(true);\n    const { data: newLink, error } = await supabase\n      .from('links')\n      .insert({ url: inputTerm, user_id: user.id })\n      .single();\n\n    if (error) {\n      console.log(error);\n      setIsCreatingLink(false);\n    } else {\n      setLinks([...links, newLink]);\n      setInputTerm(null);\n      setIsCreatingLink(false);\n    }\n  };\n\n  // \"topics\" in the UI; \"groups\" in the DB\n  const createTopic = async () => {\n    const { data: newTopic, error } = await supabase\n      .from('groups')\n      .insert({ name: null, user_id: user.id })\n      .single();\n\n    if (error) {\n      console.log(error);\n    } else {\n      setTopics([...topics, newTopic]);\n    }\n  };\n\n  // 1. disable when max links exceeded\n  // 2. switch to open \"starred\" links\n  const openAllLinksInActiveTopic = () => {\n    for (let i = 0; i < filteredLinks.length; i++) {\n      openLink(filteredLinks[i]);\n    }\n  };\n\n  const editTopicName = async ({ topicId, newTopicName }) => {\n    const { data: updatedTopic, error } = await supabase\n      .from('groups')\n      .update({ name: newTopicName })\n      .eq('id', topicId)\n      .single();\n\n    if (error) {\n      console.error(error);\n    } else {\n      const updatedTopics = topics.map((topic) => {\n        if (topic.id === updatedTopic.id) {\n          return updatedTopic;\n        }\n        return topic;\n      });\n\n      setTopics(updatedTopics);\n    }\n  };\n\n  const editLinkName = async ({ linkId, newLinkName }) => {\n    const { data: updatedLink, error } = await supabase\n      .from('links')\n      .update({ name: newLinkName })\n      .eq('id', linkId)\n      .single();\n\n    if (error) {\n      console.error(error);\n    } else {\n      const updatedLinks = links.map((link) => {\n        if (link.id === updatedLink.id) {\n          return updatedLink;\n        }\n        return link;\n      });\n\n      setLinks(updatedLinks);\n    }\n  };\n\n  const addLinkToTopic = async ({ linkId, topicId }) => {\n    const { data: updatedLink, error } = await supabase\n      .from('links')\n      .update({ group_id: topicId })\n      .eq('id', linkId)\n      .single();\n\n    if (error) {\n      console.error(error);\n    } else {\n      const updatedLinks = links.map((link) => {\n        if (link.id === updatedLink.id) {\n          return updatedLink;\n        }\n        return link;\n      });\n\n      setLinks(updatedLinks);\n    }\n  };\n\n  useEffect(() => {\n    if (!topics) {\n      fetchTopics();\n    }\n\n    if (!links) {\n      fetchLinks();\n    }\n  }, [topics, links]);\n\n  const renderSideContent = () => {\n    return (\n      <Flex\n        direction='column'\n        width='17%'\n        height='100%'\n        justify='flex-start'\n        align='center'\n        p={5}\n      >\n        <Flex\n          bg='light'\n          width='100%'\n          height='100%'\n          direction='column'\n          align='center'\n          borderRadius={10}\n          boxShadow='base'\n        >\n          <Text\n            color='cyan.500'\n            fontWeight='black'\n            fontSize='2xl'\n            pt={4}\n            pb='40px'\n          >\n            🌐 Atlas\n          </Text>\n          <Box\n            width='100%'\n            bg={!activeTopicId ? 'gray.50' : null}\n            onClick={() => {\n              setActiveTopicId(null);\n            }}\n            _hover={{\n              bg: 'gray.100',\n              cursor: 'pointer',\n            }}\n          >\n            <Text\n              py={2}\n              px={6}\n              alignSelf='flex-start'\n              fontWeight={!activeTopicId ? 'bold' : null}\n            >\n              All Links ({links?.length})\n            </Text>\n          </Box>\n          <Box\n            width='100%'\n            bg={activeTopicId === UNCATEGORIZED ? 'gray.50' : null}\n            onClick={() => {\n              setActiveTopicId(UNCATEGORIZED);\n            }}\n            _hover={{\n              bg: 'gray.100',\n              cursor: 'pointer',\n            }}\n          >\n            <Text\n              py={2}\n              px={6}\n              alignSelf='flex-start'\n              fontWeight={activeTopicId === UNCATEGORIZED ? 'bold' : null}\n            >\n              Uncategorized ({uncategorizedLinksCount})\n            </Text>\n          </Box>\n          {topics?.map((topic) => {\n            return (\n              <TopicListItem\n                key={topic.id}\n                topic={topic}\n                activeTopicId={activeTopicId}\n                setActiveTopicId={setActiveTopicId}\n                topicLinksCount={topicLinkCountsMap[topic.id]}\n                addLinkToTopic={addLinkToTopic}\n              />\n            );\n          })}\n          <Button\n            fontSize='sm'\n            bg='gray.200'\n            position='absolute'\n            bottom={10}\n            onClick={createTopic}\n            borderRadius={8}\n          >\n            NEW GROUP\n          </Button>\n        </Flex>\n      </Flex>\n    );\n  };\n\n  const renderMainContent = () => {\n    return (\n      <Flex\n        direction='column'\n        alignItems='flex-start'\n        width='83%'\n        height='100%'\n      >\n        <Flex direction='column' width='100%'>\n          <Flex\n            direction='row'\n            justify='flex-start'\n            pb={[4, 4, 2]}\n            pt={5}\n            px={3}\n          >\n            <InputGroup flex={0}>\n              <Input\n                width={['95vw', '95vw', '50vw']}\n                borderRadius={10}\n                borderWidth='0px'\n                boxShadow='base'\n                bg='light'\n                type='text'\n                placeholder='Search links...'\n                value={inputTerm || ''}\n                onChange={(e) => setInputTerm(e.target.value)}\n                disabled={isCreatingLink}\n              />\n            </InputGroup>\n            {inputTerm ? (\n              <Button\n                ml={2}\n                onClick={addLink}\n                disabled={isCreatingLink}\n                colorScheme='teal'\n                fontSize='sm'\n                _hover={{\n                  textDecoration: 'none',\n                }}\n              >\n                Create link\n              </Button>\n            ) : null}\n          </Flex>\n\n          <Flex\n            direction='column'\n            height='calc(100vh - 72px)'\n            overflowY='scroll'\n            overflowX='hidden'\n            pt={[1, 1, 2]}\n          >\n            <Flex\n              direction='row'\n              align='center'\n              justify='space-between'\n              width='100%'\n              my={2}\n              mx={2}\n              pb={2}\n            >\n              {!activeTopicId || activeTopicId === UNCATEGORIZED ? (\n                <Text fontSize='xl' fontWeight={600}>\n                  {activeTopicId ? UNCATEGORIZED : 'All Links'}\n                </Text>\n              ) : (\n                <EditText\n                  style={{ width: '300px', fontSize: '20px', fontWeight: 600 }}\n                  value={newTopicName || ''}\n                  placeholder='Enter topic name...'\n                  onChange={(e) => {\n                    setNewTopicName(e.target.value);\n                  }}\n                  onBlur={() => {\n                    editTopicName({ topicId: activeTopic.id, newTopicName });\n                  }}\n                  readonly={!activeTopicId || activeTopicId === UNCATEGORIZED}\n                />\n              )}\n\n              <Flex mr={10}>\n                <Button\n                  width='100px'\n                  borderRadius={8}\n                  fontSize='sm'\n                  bg='gray.200'\n                  disabled={\n                    !filteredLinks?.length ||\n                    filteredLinks?.length > MAX_OPENABLE_LINKS\n                  }\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    openAllLinksInActiveTopic();\n                  }}\n                >\n                  OPEN ALL\n                </Button>\n              </Flex>\n            </Flex>\n\n            <Links\n              category={null}\n              links={filteredLinks}\n              inputTerm={inputTerm}\n              deleteLink={deleteLink}\n              activeLinkId={activeLinkId}\n              setActiveLinkId={setActiveLinkId}\n              editLinkName={editLinkName}\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  };\n\n  return (\n    <Flex direction='row' bg='canvas' height='100vh' overflowY='hidden'>\n      {renderSideContent()}\n      {renderMainContent()}\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Button, Flex, Text } from '@chakra-ui/react';\n\nimport supabase from 'supabase';\n\nexport const Login = () => {\n  const isLocalDevelopment = process.env.NODE_ENV === 'development';\n\n  // TODO: additional login channels\n  const signInWithGithub = () => {\n    supabase.auth.signIn(\n      {\n        provider: 'github',\n      },\n      {\n        redirectTo: isLocalDevelopment\n          ? 'http://localhost:3000/atlas'\n          : 'https://rynpatk.github.io/atlas',\n      },\n    );\n  };\n\n  return (\n    <Flex direction='column' bg='paper' height='100vh'>\n      <Flex\n        align='center'\n        justify='center'\n        direction='row'\n        width='100%'\n        height='100%'\n      >\n        <Flex direction='column' align='center'>\n          <Text color='softBlack' fontWeight={700} fontSize='6xl' pb={5}>\n            Atlas\n          </Text>\n\n          {/* TODO: make multicolor button */}\n          <Button\n            borderRadius={2}\n            color='softBlack'\n            // bg='Terracotta'\n            // this looks the best\n            bg='linear-gradient(90deg, rgba(133,205,203,1) 15%, rgba(232,168,124,1) 66%, rgba(226,125,96,1) 85%)'\n            // bg='linear-gradient(90deg, rgba(133,205,203,1) 0%, rgba(65,179,163,1) 25%, rgba(232,168,124,1) 50%, rgba(226,125,96,1) 75%, rgba(195,141,158,1) 100%)'\n            onClick={signInWithGithub}\n          >\n            Login with Github\n          </Button>\n\n          {/* <Button color='black' bg='Keppel' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n          <Button color='black' bg='OrientalPink' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n          <Button color='black' bg='HalfBaked' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n          <Button color='black' bg='Tacao' onClick={signInWithGithub}>\n            Login with Github\n          </Button> */}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { Text } from '@chakra-ui/react';\nimport supabase from 'supabase';\n\nimport { Main, Login } from 'pages';\n\n// development notes:\n// supabase portal (development): https://app.supabase.io/project/zvwrqklvkomshwpkxepe\n// github repo: https://github.com/rynpatk/atlas\n// `npm run deploy` builds and deploys app to gh-pages\n// currently deployed at: https://rynpatk.github.io/atlas/\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const isAuthenticated = Boolean(user);\n\n  useEffect(() => {\n    const session = supabase.auth.session();\n    setUser(session?.user ?? null);\n\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      async (_, session) => {\n        const currentUser = session?.user;\n        setUser(currentUser ?? null);\n      },\n    );\n\n    return () => {\n      authListener?.unsubscribe();\n    };\n  }, [user]);\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Routes>\n          <Route\n            exact\n            path='/'\n            element={isAuthenticated ? <Main user={user} /> : <Login />}\n          />\n          <Route element={<Text>Oops!</Text>} status={404} />\n        </Routes>\n      </BrowserRouter>\n    </DndProvider>\n  );\n};\n\nexport default App;\n","export const colors = {\n  // in-use\n  Terracotta: '#E27D60',\n  HalfBaked: '#85CDCB',\n  Tacao: '#E8A87C',\n  OrientalPink: '#C38D9E',\n  Keppel: '#41B3A3',\n  softBlack: '#282425',\n\n  // old\n  softPink: '#f15152ff',\n  'primary-focus': '#e86f68',\n  'primary-content': '#282425',\n  softBlue: '#a4cbb4',\n  'secondary-focus': '#84b89a',\n  'secondary-content': '#282425',\n  softYellow: '#ebdc99',\n  'accent-focus': '#e2cd6e',\n  neutral: '#7d7259',\n  'neutral-focus': '#454035',\n  paper: '#fbfbf8',\n  base: '#e4d8b4',\n  'base-100': '#e4d8b4',\n  'base-200': '#d2c59d',\n  'base-300': '#c6b386',\n  'base-content': '#282425',\n  info: '#2094f3',\n  success: '#009485',\n  warning: '#ff9900',\n  error: '#ff5724',\n  canvas: '#F4F1EA',\n  light: '#FFFFFF',\n};\n\nexport default colors;\n","import { extendTheme } from '@chakra-ui/react';\n\nimport colors from './colors';\n\nexport const theme = extendTheme({\n  colors,\n  fonts: {\n    heading: 'Sora',\n    body: 'Sora',\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nimport App from './App';\nimport theme from './styles/theme';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}