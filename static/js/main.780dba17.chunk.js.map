{"version":3,"sources":["constants.js","supabase.js","pages/Main.js","pages/Login.js","App.js","styles/colors.js","styles/theme.js","index.js"],"names":["REACT_APP_SUPABASE_URL","process","REACT_APP_SUPABASE_KEY","supabase","createClient","HighlightedText","str","substr","startIndex","indexOf","trim","fontSize","startStr","slice","endStr","length","as","fontWeight","color","LinkListItem","url","inputTerm","m","onClick","window","open","_hover","cursor","Links","category","links","direction","flexWrap","justify","align","overflowY","overflowX","pb","map","link","id","Main","user","inputRef","useRef","useState","setInputTerm","isCreatingLink","setIsCreatingLink","setLinks","fetchLinks","a","from","select","order","ascending","data","error","console","log","addLink","insert","user_id","single","newLink","useEffect","bg","height","width","pl","pt","mt","alignItems","px","justifySelf","type","placeholder","value","onChange","e","target","disabled","alignSelf","variant","textDecoration","zIndex","position","bottom","left","auth","signOut","right","ref","style","display","current","click","Login","signIn","provider","redirectTo","App","setUser","isAuthenticated","Boolean","session","onAuthStateChange","_","currentUser","authListener","unsubscribe","basename","exact","path","element","status","colors","Terracotta","HalfBaked","Tacao","OrientalPink","Keppel","softBlack","softPink","softBlue","softYellow","neutral","paper","info","success","warning","theme","extendTheme","fonts","heading","body","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.780dba17.chunk.js","sourcesContent":["export const REACT_APP_SUPABASE_URL = process.env.REACT_APP_SUPABASE_URL;\nexport const REACT_APP_SUPABASE_KEY = process.env.REACT_APP_SUPABASE_KEY;\n\nexport default {\n  REACT_APP_SUPABASE_KEY,\n  REACT_APP_SUPABASE_URL,\n};\n","import { createClient } from '@supabase/supabase-js';\n\nimport { REACT_APP_SUPABASE_URL, REACT_APP_SUPABASE_KEY } from './constants';\n\n// Create a single supabase client for interacting with your database\nexport const supabase = createClient(\n  REACT_APP_SUPABASE_URL,\n  REACT_APP_SUPABASE_KEY,\n);\n\nexport default supabase;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Box, Input, InputGroup, Button, Flex, Text } from '@chakra-ui/react';\nimport supabase from 'supabase';\n\nconst HighlightedText = ({ str, substr = '' }) => {\n  const startIndex = str.indexOf(substr);\n\n  if (!substr || !substr.trim()) {\n    return <Text fontSize={['sm', 'sm', 'md']}>{str}</Text>;\n  }\n\n  if (startIndex > -1) {\n    const startStr = str.slice(0, startIndex);\n    const endStr = str.slice(startIndex + substr.length, str.length);\n\n    return (\n      <Text fontSize={['sm', 'sm', 'md']}>\n        {startStr}\n        <Text as='span' fontWeight={600} color='Keppel'>\n          {substr}\n        </Text>\n        {endStr}\n      </Text>\n    );\n  } else {\n    return (\n      <Text fontSize={['sm', 'sm', 'md']} color='gray.400'>\n        {str}\n      </Text>\n    );\n  }\n};\n\nconst LinkListItem = ({ url, inputTerm }) => {\n  return (\n    <Flex\n      m={[1, 1, 2]}\n      // TODO: open as background tab\n      onClick={() => {\n        if (url.indexOf('http://') === 0 || url.indexOf('https://') === 0) {\n          window.open(url, '_blank');\n        } else {\n          window.open(`http://${url}`, '_blank');\n        }\n      }}\n      _hover={{\n        cursor: 'pointer',\n        fontWeight: 600,\n        color: 'Keppel',\n      }}\n    >\n      <HighlightedText str={url} substr={inputTerm} />\n    </Flex>\n  );\n};\n\nconst Links = ({ category, links, inputTerm }) => {\n  if (!links) {\n    // TODO: loading spinner\n    return null;\n  }\n\n  return (\n    <Flex\n      direction='row'\n      flexWrap='wrap'\n      justify='center'\n      align='center'\n      overflowY='scroll'\n      overflowX='hidden'\n      pb={20}\n    >\n      {links.map((link) => {\n        return (\n          <LinkListItem key={link.id} url={link.url} inputTerm={inputTerm} />\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport const Main = ({ user }) => {\n  const inputRef = useRef();\n  const [inputTerm, setInputTerm] = useState(null);\n  const [isCreatingLink, setIsCreatingLink] = useState(false);\n  const [links, setLinks] = useState(null);\n  // const [selectedCategory, setSelectedCategory] = useState(null);\n  // const categories = Object.keys(MOCK_DATA);\n  // const contents = selectedCategory ? MOCK_DATA[selectedCategory] : null;\n\n  const signOut = () => {\n    supabase.auth.signOut();\n  };\n\n  const fetchLinks = async () => {\n    const { data, error } = await supabase\n      .from('links')\n      .select('*')\n      .order('id', { ascending: true });\n\n    if (error) {\n      console.log('error', error);\n    } else {\n      setLinks(data);\n    }\n  };\n\n  // const deleteLink = async (id) => {\n  //   try {\n  //     await supabase.from('todos').delete().eq('id', id);\n  //     setTodos(todos.filter((x) => x.id !== id));\n  //   } catch (error) {\n  //     console.log('error', error);\n  //   }\n  // };\n\n  const addLink = async () => {\n    if (!inputTerm) return;\n\n    setIsCreatingLink(true);\n    const { data: newLink, error } = await supabase\n      .from('links')\n      .insert({ url: inputTerm, user_id: user.id })\n      .single();\n\n    if (error) {\n      console.log(error);\n      setIsCreatingLink(false);\n    } else {\n      setLinks([...links, newLink]);\n      setInputTerm(null);\n      setIsCreatingLink(false);\n    }\n  };\n\n  // const toggleCompleted = async () => {\n  //   const { data, error } = await supabase\n  //     .from('todos')\n  //     .update({ is_complete: !isCompleted })\n  //     .eq('id', todo.id)\n  //     .single();\n  //   if (error) {\n  //     console.error(error);\n  //   }\n  //   setIsCompleted(data.is_complete);\n  // };\n\n  useEffect(() => {\n    if (!links) {\n      fetchLinks();\n    }\n  }, [links]);\n\n  return (\n    <Flex direction='column' bg='paper' height='100vh' overflowY='hidden'>\n      <Flex direction='column' width='100%' justify='flex-start' pl={5}>\n        <Text\n          color='softBlack'\n          fontWeight='black'\n          fontSize={['3xl', '3xl', '4xl']}\n          pt={2}\n        >\n          Atlas\n        </Text>\n        <Text\n          color='gray.400'\n          fontWeight='black'\n          fontSize={['xl', 'xl', '2xl']}\n          mt={-2}\n        >\n          アトラス\n        </Text>\n      </Flex>\n      <Flex direction='column' alignItems='center' width='100%' height='100%'>\n        <Flex\n          direction='column'\n          justify='center'\n          align='center'\n          width='100vw'\n          px={3}\n        >\n          <Flex\n            direction='column'\n            pb={[4, 4, 8]}\n            pt={4}\n            width={['95vw', '95vw', '65vw']}\n          >\n            <InputGroup justifySelf='center'>\n              <Input\n                type='text'\n                placeholder='Enter link...'\n                value={inputTerm || ''}\n                onChange={(e) => setInputTerm(e.target.value)}\n                disabled={isCreatingLink}\n              />\n            </InputGroup>\n            <Button\n              pt={3}\n              alignSelf='flex-end'\n              variant='link'\n              color='OrientalPink'\n              onClick={addLink}\n              disabled={!inputTerm || isCreatingLink}\n              _hover={{\n                textDecoration: 'none',\n              }}\n            >\n              Add\n            </Button>\n          </Flex>\n\n          <Flex\n            direction='column'\n            width='100%'\n            // height='100%'\n            // playing with mobile scroll\n            height='calc(100vh - 105px - 75px)'\n            overflowY='scroll'\n            pt={5}\n          >\n            <Links category={null} links={links} inputTerm={inputTerm} />\n          </Flex>\n        </Flex>\n      </Flex>\n      <Button\n        zIndex={100}\n        position='absolute'\n        bottom={[5, 5, 10]}\n        left={[5, 5, 10]}\n        bg='Terracotta'\n        onClick={signOut}\n      >\n        Logout\n      </Button>\n      <Box\n        zIndex={100}\n        position='absolute'\n        bottom={[5, 5, 10]}\n        right={[5, 5, 10]}\n      >\n        <input\n          type='file'\n          ref={inputRef}\n          style={{ display: 'none' }}\n          // onChange={(e) => onChange(e.target.files[0])}\n          // accept={acceptedFileTypes}\n          // name={name}\n          // {...inputProps}\n        />\n        <Button\n          onClick={() => inputRef.current.click()}\n          bg='HalfBaked'\n          disabled\n          // placeholder={placeholder || 'Your file ...'}\n          // onChange={(e) => {}}\n          // readOnly={true}\n          // value={(value && value.name) || ''}\n        >\n          Import\n        </Button>\n      </Box>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Button, Flex, Text } from '@chakra-ui/react';\n\nimport supabase from 'supabase';\n\nexport const Login = () => {\n  const isLocalDevelopment = process.env.NODE_ENV === 'development';\n\n  // TODO: additional login channels\n  const signInWithGithub = () => {\n    supabase.auth.signIn(\n      {\n        provider: 'github',\n      },\n      {\n        redirectTo: isLocalDevelopment\n          ? 'http://localhost:3000/atlas'\n          : 'https://rynpatk.github.io/atlas',\n      },\n    );\n  };\n\n  return (\n    <Flex direction='column' bg='paper' height='100vh'>\n      <Flex\n        align='center'\n        justify='center'\n        direction='row'\n        width='100%'\n        height='100%'\n      >\n        <Flex direction='column' align='center'>\n          <Text color='softBlack' fontWeight={700} fontSize='6xl' pb={5}>\n            Atlas\n          </Text>\n\n          {/* TODO: make multicolor button */}\n          <Button color='black' bg='Terracotta' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n          {/* <Button color='black' bg='Keppel' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n          <Button color='black' bg='OrientalPink' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n          <Button color='black' bg='HalfBaked' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n          <Button color='black' bg='Tacao' onClick={signInWithGithub}>\n            Login with Github\n          </Button> */}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Text } from '@chakra-ui/react';\nimport supabase from 'supabase';\n\nimport { Main, Login } from 'pages';\n\n// development notes:\n// supabase portal (development): https://app.supabase.io/project/zvwrqklvkomshwpkxepe\n// github repo: https://github.com/rynpatk/atlas\n// `npm run deploy` builds and deploys app to gh-pages\n// currently deployed at: https://rynpatk.github.io/atlas/\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const isAuthenticated = Boolean(user);\n\n  useEffect(() => {\n    const session = supabase.auth.session();\n    setUser(session?.user ?? null);\n\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      async (_, session) => {\n        const currentUser = session?.user;\n        setUser(currentUser ?? null);\n      },\n    );\n\n    return () => {\n      authListener?.unsubscribe();\n    };\n  }, [user]);\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route\n          exact\n          path='/'\n          element={isAuthenticated ? <Main user={user} /> : <Login />}\n        />\n        <Route element={<Text>Oops!</Text>} status={404} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","export const colors = {\n  // in-use\n  Terracotta: '#E27D60',\n  HalfBaked: '#85CDCB',\n  Tacao: '#E8A87C',\n  OrientalPink: '#C38D9E',\n  Keppel: '#41B3A3',\n\n  softBlack: '#282425',\n\n  // old\n  softPink: '#f15152ff',\n  'primary-focus': '#e86f68',\n  'primary-content': '#282425',\n  softBlue: '#a4cbb4',\n  'secondary-focus': '#84b89a',\n  'secondary-content': '#282425',\n  softYellow: '#ebdc99',\n  'accent-focus': '#e2cd6e',\n\n  neutral: '#7d7259',\n  'neutral-focus': '#454035',\n  paper: '#fbfbf8',\n  // paper: '#e4d8b4',\n  'base-100': '#e4d8b4',\n  'base-200': '#d2c59d',\n  'base-300': '#c6b386',\n  'base-content': '#282425',\n  info: '#2094f3',\n  success: '#009485',\n  warning: '#ff9900',\n  error: '#ff5724',\n};\n\nexport default colors;\n","import { extendTheme } from '@chakra-ui/react';\n\nimport colors from './colors';\n\nexport const theme = extendTheme({\n  colors,\n  fonts: {\n    heading: 'Sora',\n    body: 'Sora',\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nimport App from './App';\nimport theme from './styles/theme';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}