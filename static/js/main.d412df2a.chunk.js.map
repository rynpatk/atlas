{"version":3,"sources":["constants.js","supabase.js","store/createCoreSlice.js","store/useStore.js","components/HighlightedText.js","components/Links.js","components/Tools.js","pages/Main.js","pages/Login.js","App.js","styles/colors.js","styles/theme.js","index.js"],"names":["REACT_APP_SUPABASE_URL","process","REACT_APP_SUPABASE_KEY","supabase","createClient","createCoreSlice","set","get","activeTool","setActiveTool","tool","prev","useStore","create","HighlightedText","str","substr","trim","mx","my","fontSize","startIndex","toLowerCase","indexOf","endIndex","length","startText","slice","highlightedText","endText","as","fontWeight","color","LinkListItem","link","inputTerm","onClick","_hover","cursor","url","Links","deleteLink","links","state","a","window","open","id","direction","flexWrap","justify","align","overflowX","px","pb","map","Tools","mr","variant","colorScheme","p","borderRadius","icon","disabled","Main","user","inputRef","useRef","useState","setInputTerm","isCreatingLink","setIsCreatingLink","setLinks","fetchLinks","from","select","order","ascending","data","error","console","log","delete","eq","filter","addLink","insert","user_id","single","newLink","useEffect","bg","height","overflowY","width","pt","mt","alignItems","justifySelf","type","placeholder","value","onChange","e","target","alignSelf","textDecoration","category","zIndex","position","bottom","left","auth","signOut","right","ref","style","display","current","click","Login","signIn","provider","redirectTo","App","setUser","isAuthenticated","Boolean","session","onAuthStateChange","_","currentUser","authListener","unsubscribe","basename","exact","path","element","status","colors","Terracotta","HalfBaked","Tacao","OrientalPink","Keppel","softBlack","softPink","softBlue","softYellow","neutral","paper","info","success","warning","theme","extendTheme","fonts","heading","body","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d412df2a.chunk.js","sourcesContent":["export const REACT_APP_SUPABASE_URL = process.env.REACT_APP_SUPABASE_URL;\nexport const REACT_APP_SUPABASE_KEY = process.env.REACT_APP_SUPABASE_KEY;\n\nexport default {\n  REACT_APP_SUPABASE_KEY,\n  REACT_APP_SUPABASE_URL,\n};\n","import { createClient } from '@supabase/supabase-js';\n\nimport { REACT_APP_SUPABASE_URL, REACT_APP_SUPABASE_KEY } from './constants';\n\n// Create a single supabase client for interacting with your database\nexport const supabase = createClient(\n  REACT_APP_SUPABASE_URL,\n  REACT_APP_SUPABASE_KEY,\n);\n\nexport default supabase;\n","const createCoreSlice = (set, get) => ({\n  activeTool: 'open',\n  setActiveTool: (tool) => {\n    set((prev) => ({ activeTool: prev.activeTool === tool ? null : tool }));\n  },\n});\n\nexport default createCoreSlice;\n","import create from 'zustand';\n\nimport createCoreSlice from './createCoreSlice';\n\nconst useStore = create((set, get) => ({\n  ...createCoreSlice(set, get),\n}));\n\nexport default useStore;\n","import React from 'react';\nimport { Text } from '@chakra-ui/react';\n\nexport const HighlightedText = ({ str, substr = '' }) => {\n  if (!substr || !substr.trim()) {\n    return (\n      <>\n        <Text mx={1} my={0.5} fontSize={['sm', 'sm', 'md']}>\n          {str}\n        </Text>\n        {/* TODO makee this work nicely */}\n        <Text mx={1} my={0.5} fontSize={['sm', 'sm', 'md']}>\n          &bull;\n        </Text>\n      </>\n    );\n  }\n\n  const startIndex = str.toLowerCase().indexOf(substr.toLowerCase());\n\n  if (startIndex > -1) {\n    const endIndex = startIndex + substr.length;\n    const startText = str.slice(0, startIndex);\n    const highlightedText = str.slice(startIndex, endIndex);\n    const endText = str.slice(endIndex, str.length);\n\n    return (\n      <Text fontSize={['sm', 'sm', 'md']} mx={1} my={0.5}>\n        {startText}\n        <Text as='span' fontWeight={600} color='blue.500'>\n          {highlightedText}\n        </Text>\n        {endText}\n      </Text>\n    );\n  } else {\n    return null;\n    // return (\n    //   <Text fontSize={['sm', 'sm', 'md']} color='gray.400'>\n    //     {str}\n    //   </Text>\n    // );\n  }\n};\n\nexport default HighlightedText;\n","import React from 'react';\nimport { Flex } from '@chakra-ui/react';\n\nimport useStore from 'store/useStore';\nimport HighlightedText from 'components/HighlightedText';\n\nexport const LinkListItem = ({ link, inputTerm, onClick, activeTool }) => {\n  return (\n    <Flex\n      onClick={() => {\n        onClick(link);\n      }}\n      _hover={\n        activeTool\n          ? {\n              cursor: 'pointer',\n              fontWeight: 600,\n              // TODO: have color change based on mode\n              color: activeTool === 'delete' ? 'orange.500' : 'blue.500',\n            }\n          : {}\n      }\n    >\n      <HighlightedText str={link.url} substr={inputTerm} />\n    </Flex>\n  );\n};\n\nexport const Links = ({ deleteLink, links, inputTerm }) => {\n  const activeTool = useStore((state) => state.activeTool);\n\n  if (!links) {\n    // TODO: loading spinner\n    return null;\n  }\n\n  const onClick = async (link) => {\n    if (activeTool === 'open') {\n      if (\n        link.url.indexOf('http://') === 0 ||\n        link.url.indexOf('https://') === 0\n      ) {\n        window.open(link.url, '_blank');\n      } else {\n        window.open(`http://${link.url}`, '_blank');\n      }\n    } else if (activeTool === 'delete') {\n      deleteLink(link.id);\n    }\n  };\n\n  return (\n    <Flex\n      direction='row'\n      flexWrap='wrap'\n      justify={['flex-start', 'flex-start', 'center']}\n      align='center'\n      overflowX='hidden'\n      px={2}\n      pb={20}\n    >\n      {links.map((link) => {\n        return (\n          <LinkListItem\n            key={link.id}\n            link={link}\n            inputTerm={inputTerm}\n            onClick={onClick}\n            activeTool={activeTool}\n          />\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Links;\n","import React from 'react';\nimport { IconButton, Flex } from '@chakra-ui/react';\nimport { BsCursor, BsHandIndexThumb, BsTrash } from 'react-icons/bs';\n\nimport useStore from 'store/useStore';\n\nexport const Tools = () => {\n  const activeTool = useStore((state) => state.activeTool);\n  const setActiveTool = useStore((state) => state.setActiveTool);\n\n  return (\n    <Flex direction='row'>\n      <IconButton\n        mr={3}\n        variant={activeTool === 'open' ? 'solid' : 'outline'}\n        onClick={() => setActiveTool('open')}\n        colorScheme='blue'\n        aria-label='open links'\n        fontSize='25px'\n        p={2}\n        borderRadius={2}\n        icon={<BsCursor />}\n      />\n      <IconButton\n        disabled\n        mr={3}\n        variant={activeTool === 'select' ? 'solid' : 'outline'}\n        onClick={() => setActiveTool('select')}\n        colorScheme='green'\n        aria-label='select links'\n        fontSize='25px'\n        p={2}\n        borderRadius={2}\n        icon={<BsHandIndexThumb />}\n      />\n      <IconButton\n        variant={activeTool === 'delete' ? 'solid' : 'outline'}\n        onClick={() => setActiveTool('delete')}\n        colorScheme='orange'\n        aria-label='delete links'\n        fontSize='25px'\n        p={2}\n        borderRadius={2}\n        icon={<BsTrash />}\n      />\n    </Flex>\n  );\n};\n\nexport default Tools;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Box, Input, InputGroup, Button, Flex, Text } from '@chakra-ui/react';\nimport supabase from 'supabase';\n\nimport Links from 'components/Links';\nimport Tools from 'components/Tools';\n\nexport const Main = ({ user }) => {\n  const inputRef = useRef();\n  const [inputTerm, setInputTerm] = useState(null);\n  const [isCreatingLink, setIsCreatingLink] = useState(false);\n  const [links, setLinks] = useState(null);\n  // const [selectedCategory, setSelectedCategory] = useState(null);\n  // const categories = Object.keys(MOCK_DATA);\n  // const contents = selectedCategory ? MOCK_DATA[selectedCategory] : null;\n\n  const signOut = () => {\n    supabase.auth.signOut();\n  };\n\n  const fetchLinks = async () => {\n    const { data, error } = await supabase\n      .from('links')\n      .select('*')\n      .order('id', { ascending: true });\n\n    if (error) {\n      console.log('error', error);\n    } else {\n      setLinks(data);\n    }\n  };\n\n  const deleteLink = async (id) => {\n    try {\n      await supabase.from('links').delete().eq('id', id);\n      setLinks(links.filter((link) => link.id !== id));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  const addLink = async () => {\n    if (!inputTerm) return;\n\n    setIsCreatingLink(true);\n    const { data: newLink, error } = await supabase\n      .from('links')\n      .insert({ url: inputTerm, user_id: user.id })\n      .single();\n\n    if (error) {\n      console.log(error);\n      setIsCreatingLink(false);\n    } else {\n      setLinks([...links, newLink]);\n      setInputTerm(null);\n      setIsCreatingLink(false);\n    }\n  };\n\n  // const toggleCompleted = async () => {\n  //   const { data, error } = await supabase\n  //     .from('todos')\n  //     .update({ is_complete: !isCompleted })\n  //     .eq('id', todo.id)\n  //     .single();\n  //   if (error) {\n  //     console.error(error);\n  //   }\n  //   setIsCompleted(data.is_complete);\n  // };\n\n  useEffect(() => {\n    if (!links) {\n      fetchLinks();\n    }\n  }, [links]);\n\n  return (\n    <Flex direction='column' bg='paper' height='100vh' overflowY='hidden'>\n      <Flex direction='column' width='100%' justify='flex-start'>\n        <Flex direction='row' px={5} justify='space-between' align='center'>\n          <Flex direction='column'>\n            <Text\n              color='softBlack'\n              fontWeight='black'\n              fontSize={['3xl', '3xl', '4xl']}\n              pt={2}\n            >\n              Atlas\n            </Text>\n            <Text\n              color='gray.400'\n              fontWeight='black'\n              fontSize={['xl', 'xl', '2xl']}\n              mt={-2}\n            >\n              アトラス\n            </Text>\n          </Flex>\n          <Tools />\n        </Flex>\n      </Flex>\n      <Flex direction='column' alignItems='center' width='100%' height='100%'>\n        <Flex direction='column' justify='center' align='center' width='100vw'>\n          <Flex\n            direction='column'\n            pb={[4, 4, 8]}\n            pt={4}\n            width={['95vw', '95vw', '65vw']}\n            px={3}\n          >\n            <InputGroup justifySelf='center'>\n              <Input\n                type='text'\n                placeholder='Enter link...'\n                value={inputTerm || ''}\n                onChange={(e) => setInputTerm(e.target.value)}\n                disabled={isCreatingLink}\n              />\n            </InputGroup>\n            <Button\n              pt={3}\n              alignSelf='flex-end'\n              variant='link'\n              color='OrientalPink'\n              onClick={addLink}\n              disabled={!inputTerm || isCreatingLink}\n              borderRadius={2}\n              _hover={{\n                textDecoration: 'none',\n              }}\n            >\n              Add\n            </Button>\n          </Flex>\n\n          <Flex\n            direction='column'\n            width='100%'\n            // height='100%'\n            // playing with mobile scroll\n            height='calc(100vh - 105px - 75px)'\n            overflowY='scroll'\n            pt={[1, 1, 5]}\n          >\n            <Links\n              category={null}\n              links={links}\n              inputTerm={inputTerm}\n              deleteLink={deleteLink}\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n      {/* replace bottom buttons with an account page */}\n      <Button\n        zIndex={100}\n        position='absolute'\n        bottom={[5, 5, 10]}\n        left={[5, 5, 10]}\n        bg='Terracotta'\n        onClick={signOut}\n        borderRadius={2}\n      >\n        Logout\n      </Button>\n      <Box\n        zIndex={100}\n        position='absolute'\n        bottom={[5, 5, 10]}\n        right={[5, 5, 10]}\n      >\n        <input\n          type='file'\n          ref={inputRef}\n          style={{ display: 'none' }}\n          // onChange={(e) => onChange(e.target.files[0])}\n          // accept={acceptedFileTypes}\n          // name={name}\n          // {...inputProps}\n        />\n        <Button\n          onClick={() => inputRef.current.click()}\n          bg='HalfBaked'\n          disabled\n          borderRadius={2}\n          // placeholder={placeholder || 'Your file ...'}\n          // onChange={(e) => {}}\n          // readOnly={true}\n          // value={(value && value.name) || ''}\n        >\n          Import\n        </Button>\n      </Box>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Button, Flex, Text } from '@chakra-ui/react';\n\nimport supabase from 'supabase';\n\nexport const Login = () => {\n  const isLocalDevelopment = process.env.NODE_ENV === 'development';\n\n  // TODO: additional login channels\n  const signInWithGithub = () => {\n    supabase.auth.signIn(\n      {\n        provider: 'github',\n      },\n      {\n        redirectTo: isLocalDevelopment\n          ? 'http://localhost:3000/atlas'\n          : 'https://rynpatk.github.io/atlas',\n      },\n    );\n  };\n\n  return (\n    <Flex direction='column' bg='paper' height='100vh'>\n      <Flex\n        align='center'\n        justify='center'\n        direction='row'\n        width='100%'\n        height='100%'\n      >\n        <Flex direction='column' align='center'>\n          <Text color='softBlack' fontWeight={700} fontSize='6xl' pb={5}>\n            Atlas\n          </Text>\n\n          {/* TODO: make multicolor button */}\n          <Button\n            borderRadius={2}\n            color='softBlack'\n            // bg='Terracotta'\n            // this looks the best\n            bg='linear-gradient(90deg, rgba(133,205,203,1) 15%, rgba(232,168,124,1) 66%, rgba(226,125,96,1) 85%)'\n            // bg='linear-gradient(90deg, rgba(133,205,203,1) 0%, rgba(65,179,163,1) 25%, rgba(232,168,124,1) 50%, rgba(226,125,96,1) 75%, rgba(195,141,158,1) 100%)'\n            onClick={signInWithGithub}\n          >\n            Login with Github\n          </Button>\n\n          {/* <Button color='black' bg='Keppel' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n          <Button color='black' bg='OrientalPink' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n          <Button color='black' bg='HalfBaked' onClick={signInWithGithub}>\n            Login with Github\n          </Button>\n          <Button color='black' bg='Tacao' onClick={signInWithGithub}>\n            Login with Github\n          </Button> */}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Text } from '@chakra-ui/react';\nimport supabase from 'supabase';\n\nimport { Main, Login } from 'pages';\n\n// development notes:\n// supabase portal (development): https://app.supabase.io/project/zvwrqklvkomshwpkxepe\n// github repo: https://github.com/rynpatk/atlas\n// `npm run deploy` builds and deploys app to gh-pages\n// currently deployed at: https://rynpatk.github.io/atlas/\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const isAuthenticated = Boolean(user);\n\n  useEffect(() => {\n    const session = supabase.auth.session();\n    setUser(session?.user ?? null);\n\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      async (_, session) => {\n        const currentUser = session?.user;\n        setUser(currentUser ?? null);\n      },\n    );\n\n    return () => {\n      authListener?.unsubscribe();\n    };\n  }, [user]);\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route\n          exact\n          path='/'\n          element={isAuthenticated ? <Main user={user} /> : <Login />}\n        />\n        <Route element={<Text>Oops!</Text>} status={404} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","export const colors = {\n  // in-use\n  Terracotta: '#E27D60',\n  HalfBaked: '#85CDCB',\n  Tacao: '#E8A87C',\n  OrientalPink: '#C38D9E',\n  Keppel: '#41B3A3',\n\n  softBlack: '#282425',\n\n  // old\n  softPink: '#f15152ff',\n  'primary-focus': '#e86f68',\n  'primary-content': '#282425',\n  softBlue: '#a4cbb4',\n  'secondary-focus': '#84b89a',\n  'secondary-content': '#282425',\n  softYellow: '#ebdc99',\n  'accent-focus': '#e2cd6e',\n\n  neutral: '#7d7259',\n  'neutral-focus': '#454035',\n  paper: '#fbfbf8',\n  // paper: '#e4d8b4',\n  'base-100': '#e4d8b4',\n  'base-200': '#d2c59d',\n  'base-300': '#c6b386',\n  'base-content': '#282425',\n  info: '#2094f3',\n  success: '#009485',\n  warning: '#ff9900',\n  error: '#ff5724',\n};\n\nexport default colors;\n","import { extendTheme } from '@chakra-ui/react';\n\nimport colors from './colors';\n\nexport const theme = extendTheme({\n  colors,\n  fonts: {\n    heading: 'Sora',\n    body: 'Sora',\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nimport App from './App';\nimport theme from './styles/theme';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}